package rgbvsu.io;

import java.util.ArrayList;
import javax.sound.sampled.Clip;
import rgbvsu.ResourceManager;


/**
 * A class which works as sound player
 * @author Robin
 */
public class SoundEngine {

    private ArrayList<Clip> loopingsounds;
    
    public SoundEngine() {
        loopingsounds = new ArrayList<Clip>();
    }
    
    public void playSound(String sound) {
        Clip clip = ResourceManager.getSound(sound);
        if(clip.isActive()){
            clip.stop();
        }
        clip.setFramePosition(0);
        clip.start();
    }
    
    public void loopSound(String sound) {
        Clip clip = ResourceManager.getSound(sound);
        loopingsounds.add(clip);
        clip.loop(Clip.LOOP_CONTINUOUSLY);
        
    }
    
    public void playMusic(String music) {
        
        Clip clip = ResourceManager.getSound(music);
        //loopingsounds.add(clip);
        //clip.loop(Clip.LOOP_CONTINUOUSLY);
        boolean alreadyplaying = false;
        for(int i = 0; i<loopingsounds.size(); i++){
            if(clip.equals(loopingsounds.get(i))){
                alreadyplaying = true;
                break;
            }
        }
        if(!alreadyplaying){
            stopLoopingSounds();
            loopingsounds.add(clip);
            clip.loop(Clip.LOOP_CONTINUOUSLY);
        }
    }
    
    public void stopLoopingSounds(){
        for(int i=0; i<loopingsounds.size();i++){
            loopingsounds.get(i).stop();
        }
        loopingsounds.clear();
    };
    
    public boolean isPlayingLoop(){
        if(loopingsounds.isEmpty()){
            return false;
        }
        else{
            return true;
        }
    }
}
